# .github/workflows/ci.yml

# Name of the workflow for easy identification in GitHub Actions UI
name: Continuous Integration

# Define when this workflow should run
on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  # Allow manual triggers from GitHub Actions UI
  workflow_dispatch:

# Environment variables available to all jobs
env:
  NODE_VERSION: '20.x'
  PYTHON_VERSION: '3.11'
  JAVA_VERSION: '17'
  CACHE_KEY_PREFIX: 'v1'

# Concurrency group to ensure only one workflow runs at a time per ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
        continue-on-error: false

      - name: Lint code
        run: |
          npm run lint
          npm run prettier:check

      - name: Run security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        if: ${{ env.SNYK_TOKEN != '' }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: code-quality

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit
        env:
          CI: true

      - name: Run integration tests
        run: npm run test:integration
        env:
          CI: true

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  build:
    name: Build and Package
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  deploy-preview:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.preview_url }}

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist/

      - name: Deploy to preview
        id: deploy
        run: echo "Would deploy to preview environment here"
        # Add actual deployment steps here

  # Deployment to production would be in a separate workflow file
  # triggered by releases or manual approval

# Post-workflow cleanup
cleanup:
  name: Cleanup
  runs-on: ubuntu-latest
  needs: [code-quality, test, build, deploy-preview]
  if: always()
  steps:
    - name: Remove old artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
        name: |
          build-artifacts
        failOnError: false